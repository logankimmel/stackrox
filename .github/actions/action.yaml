name: 'Image-Scan'
description: 'Scan image with StackRox'
inputs:
  central-endpoint:
    description: 'Central endpoint in the format stackrox.contoso.com:443'
    required: true
  api-token:
    description: 'API token with CI permissions'
    required: true
  image:
    description: 'Full name of the image to scan -- gcr.io/stackrox/testimage:5.1'
    required: true
outputs:
  scan-json:
    description: 'Raw scan JSON'
    value: ${{ steps.scan-info.outputs.scan-info}}
  policy-txt:
    description: 'roxctl image check output'
    value: ${{ steps.scan-check.outputs.scan-check }}
runs:
  using: "composite"
  steps:
    - run: >
        curl -k -L -H "Authorization: Bearer ${{ inputs.api-token }}" https://${{ inputs.central-endpoint }}/api/cli/download/roxctl-linux --output ./roxctl
      shell: bash
    - run: chmod +x ./roxctl
      shell: bash
    - run: ./roxctl image scan -e ${{ inputs.central-endpoint }} --image ${{ inputs.image }} &> /tmp/image-scan || true
      env:
        ROX_API_TOKEN: ${{ inputs.api-token }}
      shell: bash
    - run: ./roxctl image check -e ${{ inputs.central-endpoint }} --image ${{ inputs.image }} &> /tmp/image-check || true
      env:
        ROX_API_TOKEN: ${{ inputs.api-token }}
      shell: bash
    - run: echo "::set-output name=scan-info::$(echo $SCAN_JSON)"
      id: scan-info
      shell: bash
    - run: echo "::set-output name=scan-check::$(echo $SCAN_CHECK)"
      id: scan-check
      shell: bash